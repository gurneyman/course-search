package me.tomprince.coursesearch.api.discipline;


import me.tomprince.coursesearch.api.department.Department;
import me.tomprince.coursesearch.api.department.DepartmentRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.Iterator;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/disciplines") // This means URL's start with /demo (after Application path)
public class DisciplineController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private DisciplineRepository disciplineRepository;

    @Autowired
    private DepartmentRepository departmentRepository;


    @GetMapping
    public @ResponseBody
    Iterable<Discipline> getAllDisciplines() {
        // This returns a JSON or XML with the users
        return disciplineRepository.findAll();
    }

    @GetMapping("/{abbreviation}")
    public @ResponseBody
    SingleDisciplineWrapper getDisciplineByAbbreviation(@PathVariable String abbreviation) {
        // This returns a JSON or XML with the users
        Iterator<Discipline> disciplines = getAllDisciplines().iterator();

        boolean found = false;
        Discipline disc = new Discipline();
        while(!found && disciplines.hasNext()) {
            Discipline current = disciplines.next();
            if(current.getDISC_ABBREVIATION().equalsIgnoreCase(abbreviation)) {
                disc = current;
                found = true;
            }
        }

        Department department = disc.getDepartment();
        SingleDisciplineWrapper response = new SingleDisciplineWrapper(disc, department);

        return response;
    }

}